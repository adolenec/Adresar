[{"C:\\Users\\andri\\Desktop\\Adresar\\src\\index.js":"1","C:\\Users\\andri\\Desktop\\Adresar\\src\\App.js":"2","C:\\Users\\andri\\Desktop\\Adresar\\src\\components\\store\\store.js":"3","C:\\Users\\andri\\Desktop\\Adresar\\src\\pages\\NewContactPage.js":"4","C:\\Users\\andri\\Desktop\\Adresar\\src\\pages\\AuthenticationPage.js":"5","C:\\Users\\andri\\Desktop\\Adresar\\src\\components\\layout\\Navigation.js":"6","C:\\Users\\andri\\Desktop\\Adresar\\src\\components\\store\\auth.js":"7","C:\\Users\\andri\\Desktop\\Adresar\\src\\components\\Contacts\\NewContact.js":"8","C:\\Users\\andri\\Desktop\\Adresar\\src\\components\\authentication\\AuthForm.js":"9","C:\\Users\\andri\\Desktop\\Adresar\\src\\hooks\\useInput.js":"10","C:\\Users\\andri\\Desktop\\Adresar\\src\\pages\\ContactsPage.js":"11","C:\\Users\\andri\\Desktop\\Adresar\\src\\components\\Contacts\\Contacts.js":"12","C:\\Users\\andri\\Desktop\\Adresar\\src\\components\\Contacts\\ContactItem.js":"13","C:\\Users\\andri\\Desktop\\Adresar\\src\\components\\Contacts\\ContactsHeader.js":"14","C:\\Users\\andri\\Desktop\\Adresar\\src\\components\\Contacts\\Pagination.js":"15","C:\\Users\\andri\\Desktop\\Adresar\\src\\components\\Contacts\\ContactTypeInput.js":"16"},{"size":405,"mtime":1651591874850,"results":"17","hashOfConfig":"18"},{"size":882,"mtime":1651593149196,"results":"19","hashOfConfig":"18"},{"size":187,"mtime":1651591874843,"results":"20","hashOfConfig":"18"},{"size":176,"mtime":1651592055803,"results":"21","hashOfConfig":"18"},{"size":182,"mtime":1651591874855,"results":"22","hashOfConfig":"18"},{"size":1380,"mtime":1651593312241,"results":"23","hashOfConfig":"18"},{"size":679,"mtime":1651592055800,"results":"24","hashOfConfig":"18"},{"size":6131,"mtime":1651593257577,"results":"25","hashOfConfig":"18"},{"size":5163,"mtime":1651592055759,"results":"26","hashOfConfig":"18"},{"size":771,"mtime":1651591874846,"results":"27","hashOfConfig":"18"},{"size":163,"mtime":1651592035937,"results":"28","hashOfConfig":"18"},{"size":3533,"mtime":1651592035890,"results":"29","hashOfConfig":"18"},{"size":687,"mtime":1651592035890,"results":"30","hashOfConfig":"18"},{"size":1254,"mtime":1651592035906,"results":"31","hashOfConfig":"18"},{"size":536,"mtime":1651592035906,"results":"32","hashOfConfig":"18"},{"size":618,"mtime":1651592055742,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"4lo0dp",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\andri\\Desktop\\Adresar\\src\\index.js",[],["68","69"],"C:\\Users\\andri\\Desktop\\Adresar\\src\\App.js",[],"C:\\Users\\andri\\Desktop\\Adresar\\src\\components\\store\\store.js",[],"C:\\Users\\andri\\Desktop\\Adresar\\src\\pages\\NewContactPage.js",[],"C:\\Users\\andri\\Desktop\\Adresar\\src\\pages\\AuthenticationPage.js",[],"C:\\Users\\andri\\Desktop\\Adresar\\src\\components\\layout\\Navigation.js",[],"C:\\Users\\andri\\Desktop\\Adresar\\src\\components\\store\\auth.js",[],"C:\\Users\\andri\\Desktop\\Adresar\\src\\components\\Contacts\\NewContact.js",[],"C:\\Users\\andri\\Desktop\\Adresar\\src\\components\\authentication\\AuthForm.js",[],"C:\\Users\\andri\\Desktop\\Adresar\\src\\hooks\\useInput.js",[],"C:\\Users\\andri\\Desktop\\Adresar\\src\\pages\\ContactsPage.js",[],"C:\\Users\\andri\\Desktop\\Adresar\\src\\components\\Contacts\\Contacts.js",["70"],"import { useState, useEffect } from \"react\";\r\n\r\nimport ContactItem from \"./ContactItem\";\r\nimport classes from \"./Contacts.module.css\";\r\nimport ContactsHeader from \"./ContactsHeader\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nconst Contacts = (props) => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filteredContacts, setFilteredContacts] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [contactsPerPage, setContactsPerPage] = useState(2);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://adresar-ea8a7-default-rtdb.firebaseio.com/contacts.json\")\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(\"Couldn't load data\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        const responseData = data;\r\n\r\n        const loadedContacts = [];\r\n\r\n        for (const key in responseData) {\r\n          loadedContacts.push({\r\n            id: key,\r\n            contact: responseData[key].contact.contact,\r\n            contactType: responseData[key].contact.contactType,\r\n            dateOfBirth: responseData[key].contact.dateOfBirth,\r\n            name: responseData[key].contact.name,\r\n            lastName: responseData[key].contact.lastName,\r\n          });\r\n        }\r\n\r\n        setContacts(loadedContacts);\r\n        setFilteredContacts(loadedContacts);\r\n      })\r\n      .catch((err) => {\r\n        setError(err.message);\r\n      });\r\n  }, []);\r\n\r\n  const sortedContactsAscending = [...filteredContacts].sort(\r\n    (contactA, contactB) => {\r\n      return contactA.lastName.toLowerCase() > contactB.lastName.toLowerCase()\r\n        ? 1\r\n        : -1;\r\n    }\r\n  );\r\n\r\n  const sortedContactsDescending = [...filteredContacts].sort(\r\n    (contactA, contactB) => {\r\n      return contactA.lastName.toLowerCase() < contactB.lastName.toLowerCase()\r\n        ? 1\r\n        : -1;\r\n    }\r\n  );\r\n\r\n  const sortAscending = () => {\r\n    setFilteredContacts(sortedContactsAscending);\r\n  };\r\n\r\n  const sortDescending = () => {\r\n    setFilteredContacts(sortedContactsDescending);\r\n  };\r\n\r\n  const filterArray = (value) => {\r\n    if (value) {\r\n      const filteredContacts = contacts.filter((contact) => {\r\n        return (contact.name.toLowerCase() + contact.lastName.toLowerCase())\r\n          .replace(/\\s+/g, \"\")\r\n          .includes(value.toLowerCase().replace(/\\s+/g, \"\"));\r\n      });\r\n      setFilteredContacts(filteredContacts);\r\n    } else {\r\n      setFilteredContacts(contacts);\r\n    }\r\n  };\r\n\r\n  const LastContactIndex = currentPage * contactsPerPage;\r\n  const FirstContactIndex = LastContactIndex - contactsPerPage;\r\n  const activeContacts = filteredContacts.slice(FirstContactIndex, LastContactIndex);\r\n\r\n  const activePage = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  }\r\n\r\n  const contactsList = activeContacts.map((contact) => (\r\n    <ContactItem\r\n      key={contact.id}\r\n      contact={contact.contact}\r\n      name={contact.name}\r\n      lastName={contact.lastName}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className={classes[\"contacts-container\"]}>\r\n      <ContactsHeader\r\n        onSortAsc={sortAscending}\r\n        onSortDesc={sortDescending}\r\n        onInput={filterArray}\r\n        onSelect={setContactsPerPage}\r\n        active={activeContacts}\r\n        onChangePage={setCurrentPage}\r\n      />\r\n      <div>{contactsList}</div>\r\n      <Pagination contactsPerPage={contactsPerPage} totalContacts={filteredContacts.length} onActivePage={activePage}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","C:\\Users\\andri\\Desktop\\Adresar\\src\\components\\Contacts\\ContactItem.js",[],"C:\\Users\\andri\\Desktop\\Adresar\\src\\components\\Contacts\\ContactsHeader.js",[],"C:\\Users\\andri\\Desktop\\Adresar\\src\\components\\Contacts\\Pagination.js",[],"C:\\Users\\andri\\Desktop\\Adresar\\src\\components\\Contacts\\ContactTypeInput.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":11,"column":10,"nodeType":"77","messageId":"78","endLine":11,"endColumn":15},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]